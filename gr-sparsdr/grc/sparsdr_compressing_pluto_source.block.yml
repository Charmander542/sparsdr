# auto-generated by grc.converter

id: sparsdr_compressing_pluto_source
label: Compressing Pluto Source
category: '[SparSDR]'
flags:
- throttle

parameters:
-   id: uri
    label: IIO context URI
    dtype: string
    default: ip:192.168.2.1
-   id: bin_spec
    label: Bin specification
    dtype: string
    default: 0..8:1
-   id: average_interval
    label: Average sample interval
    dtype: int
    default: 2 ** 20
-   id: frequency
    label: Center frequency
    dtype: int
    default: '2412000000'
-   id: gain
    label: Gain
    dtype: float
    default: '60'
-   id: buffer_size
    label: Buffer size (samples)
    dtype: int
    default: 1024 * 1024
-   id: shift_amount
    label: Shift amount
    dtype: int
    default: '6'
-   id: fft_size
    label: FFT size
    dtype: int
    default: '1024'

outputs:
-   domain: stream
    dtype: sc16
asserts:
- ${ fft_size >= 8 and fft_size <= 1024 and (fft_size & (fft_size - 1)) == 0 }
- ${ average_interval >= 8 and average_interval <= (2 ** 31) and (average_interval
    & (average_interval - 1)) == 0 }

templates:
    imports: import sparsdr
    make: "sparsdr.compressing_pluto_source(${uri}, ${buffer_size})\nself.${id}.set_frequency(${frequency})\n\
        self.${id}.set_gain(${gain})\n\nself.${id}.stop_all()\nself.${id}.set_shift_amount(${shift_amount})\n\
        self.${id}.set_fft_size(${fft_size})\nself.${id}.load_rounded_hann_window(${fft_size})\n\
        self.${id}.set_bin_spec(${bin_spec})\nself.${id}.set_average_interval(${average_interval})\n\
        self.${id}.start_all()\n  "

file_format: 1
